import { useAppSelector } from '@/hooks/hooks'
import { getPersonalUser, userStatusUpdate } from '@/redux/apiCalls'
import { IMentor } from '@/types/mentor.interface'
import React, { useEffect, useState } from 'react'

const MentorStatus = () => {
	const tokens = useAppSelector(state => state.user.tokens)
	const [user, setUser] = useState<IMentor | null>(null)

	useEffect(() => {
		getPersonalUser(tokens?.access, setUser)
	}, [tokens.access])

	function changeStatus() {
		if (user?.status) {
			userStatusUpdate({ telegram_status: user?.status }, tokens.access)
		} else if (user?.status === false) {
			userStatusUpdate({ telegram_status: user?.status }, tokens.access)
		}
	}

	return (
		<div className='w-[21.5rem] bg-secondary py-[2.4rem] px-[2.6rem] rounded-[10px]'>
			<div className=' rounded-[10px] p-[0.9rem] bg-white mb-5'>
				–í–∞—à —Å—Ç–∞—Ç—É—Å: {user?.status ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : ''}
			</div>
			<div className='text-little-text tracking-wider text-[0.9rem] mb-10'>
				–°—Ç–∞—Ç—É—Å ‚Äú<span className='text-[#FB4868]'>–ê–∫—Ç–∏–≤–µ–Ω</span>‚Äù –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ
				–≤—ã –æ—Ç–∫—Ä—ã—Ç—ã –∫ –∑–∞—è–≤–∫–∞–º –æ—Ç –º–µ–Ω—Ç–∏, –∞ —Ç–∞–∫–∂–µ –¥–≤–∏–≥–∞–µ—Ç –≤–∞—à—É –∫–∞—Ä—Ç–æ—á–∫—É –≤ –≤–µ—Ä—Ö–Ω–∏–µ
				—Ä—è–¥—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
			</div>
			<div className='text-little-text tracking-wider text-[0.9rem] mb-8'>
				–°—Ç–∞—Ç—É—Å ‚Äú<span className='text-[#FB4868]'>–ù–µ –∞–∫—Ç–∏–≤–µ–Ω</span>‚Äù –æ–∑–Ω–∞—á–∞–µ—Ç,
				—á—Ç–æ –≤—ã –≤ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –∑–∞—è–≤–∫–∏ –æ—Ç –º–µ–Ω—Ç–∏, –∞ —Ç–∞–∫–∂–µ –¥–≤–∏–≥–∞–µ—Ç
				–≤–∞—à—É –∫–∞—Ä—Ç–æ—á–∫—É –≤ –Ω–∏–∂–Ω–∏–µ —Ä—è–¥—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
			</div>
			{user?.status ? (
				<button
					className='w-[8.4rem] py-[0.9rem] bg-little-text text-white rounded-[10px]'
					onClick={changeStatus}
				>
					–ù–µ –∞–∫—Ç–∏–≤–µ–Ω
				</button>
			) : (
				<button>–∞–∫—Ç–∏–≤–µ–Ω</button>
			)}
		</div>
	)
}

export default MentorStatus
